<?xml version="1.0" ?>
<!-- Copyright (c) 2016 The UUV Simulator Authors.
     All rights reserved.

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->
<sdf version="1.4">
  <world name="oceans_waves">
    <physics name="default_physics" default="true" type="ode">
      <!-- <max_step_size>0.002</max_step_size>
      <real_time_factor>1</real_time_factor>
      <real_time_update_rate>500</real_time_update_rate> -->
      <max_step_size>0.001</max_step_size>
      <real_time_factor>1</real_time_factor>
      <real_time_update_rate>1000</real_time_update_rate>
    </physics>
    <scene>
      <ambient>0.01 0.01 0.01 1.0</ambient>
      <sky>
        <clouds>
          <speed>12</speed>
        </clouds>
      </sky>
      <shadows>0</shadows>
    </scene>

    <!-- Start place for the drone -->
        
    <!-- <model name='ground_plane'>
      <static>1</static>
      <link name='link'>
        <collision name='collision'>
          <geometry>
            <plane>
              <normal>0 0 1</normal>
              <size>100 100</size>
            </plane>
          </geometry>
          <surface>
            <friction>
              <ode>
                <mu>100</mu>
                <mu2>50</mu2>
              </ode>
            </friction>
            <bounce/>
            <contact>
              <ode/>
            </contact>
          </surface>
          <max_contacts>10</max_contacts>
        </collision>
        <visual name='visual'>
          <cast_shadows>0</cast_shadows>
          <geometry>
            <plane>
              <normal>0 0 1</normal>
              <size>100 100</size>
            </plane>
          </geometry>
          <material>
            <script>
              <uri>file://media/materials/scripts/gazebo.material</uri>
              <name>Gazebo/Blue</name>
            </script>
          </material>
        </visual>
        <velocity_decay>
          <linear>0</linear>
          <angular>0</angular>
        </velocity_decay>
        <self_collide>0</self_collide>
        <kinematic>0</kinematic>
        <gravity>1</gravity>
      </link>
    </model> -->

    <!-- Landing platform -->
    <!-- <model name='helipad_ar'>
      <static>1</static>
      <link name='link'>
        <pose>0 0 0 0 -0 0</pose>
        <collision name='collision'>
          <geometry>
            <mesh>
              <uri>model://helipad_ar/meshes/pad.dae</uri>
              <scale>0.386 0.386 1</scale>
            </mesh>
          </geometry>
          <max_contacts>10</max_contacts>
          <surface>
            <bounce/>
            <friction>
              <ode/>
            </friction>
            <contact>
              <ode/>
            </contact>
          </surface>
        </collision>
        <visual name='visual'>
          <geometry>
            <mesh>
              <uri>model://helipad_ar/meshes/pad.dae</uri>
              <scale>0.386 0.386 1</scale>
            </mesh>
          </geometry>
        </visual>
        <velocity_decay>
          <linear>0</linear>
          <angular>0</angular>
        </velocity_decay>
        <self_collide>0</self_collide>
        <kinematic>0</kinematic>
        <gravity>1</gravity>
      </link>
      <pose>11 10 0.45 0 -0 1.57</pose>
    </model> -->

    <!-- Revolt -->
    <!-- Original: 60m, model 302 cm -> scale: 0,005 -->
    <!-- <model name='revolt'>
      <static>1</static>
      <link name='link'>
        <pose>0 0 0 0 -0 0</pose>
        <collision name='collision'>
          <geometry>
            <mesh>
              <uri>model://revolt/meshes/revolt.dae</uri>
              <scale>1 1 1</scale>
            </mesh>
          </geometry>
          <max_contacts>10</max_contacts>
          <surface>
            <bounce/>
            <friction>
              <ode/>
            </friction>
            <contact>
              <ode/>
            </contact>
          </surface>
        </collision>
        <visual name='visual'>
          <geometry>
            <mesh>
              <uri>model://revolt/meshes/revolt.dae</uri>
              <scale>1 1 1</scale>
            </mesh>
          </geometry>
        </visual>
        <velocity_decay>
          <linear>0</linear>
          <angular>0</angular>
        </velocity_decay>
        <self_collide>0</self_collide>
        <kinematic>0</kinematic>
        <gravity>1</gravity>
      </link>
      <pose>10 10 0 0 -0 0</pose>
    </model> -->



    <!-- Global light source -->
    <light type="directional" name="sun1">
      <pose>50 0 150 0 0 0</pose>
      <diffuse>1 1 1 1</diffuse>
      <specular>.1 .1 .1 1</specular>
      <direction>0.3 0.3 -1</direction>
      <cast_shadows>0</cast_shadows>
    </light>

    <!-- Global light source -->
    <light type="directional" name="sun_diffuse">
      <pose>-50 0 -150 0 0 0</pose>
      <diffuse>0.6 0.6 0.6 1</diffuse>
      <specular>0 0 0 1</specular>
      <direction>-0.3 -0.3 -1</direction>
      <cast_shadows>0</cast_shadows>
    </light>


    <!-- Bounding box with sea surface -->
    <include>
      <uri>model://ocean</uri>
    </include>


    <!-- Animated revolt -->
    <model name='animated_revolt'>
      <static>1</static>
      <link name='link'>
        <pose>0 0 0 0 0 0</pose>
        <collision name='collision'>
          <geometry>
            <mesh>
              <uri>model://revolt/meshes/revolt.dae</uri>
              <scale>1 1 1</scale>
            </mesh>
          </geometry>
        </collision>
        <visual name='visual'>
          <geometry>
            <mesh>
              <uri>model://revolt/meshes/revolt.dae</uri>
              <scale>1 1 1</scale>
            </mesh>
          </geometry>
        </visual>
      </link>


      <model name='helipad'>
        <static>1</static>
        <pose>0 0 0.0 0 0 0</pose>
        <link name='link_01'>
          <pose>1 0 0.45 0 0 -1.57</pose>
          <collision name='collision_01'>
            <geometry>
              <mesh>
                <uri>model://helipad/meshes/helipad.dae</uri>
                <scale>1 1 1</scale>
              </mesh>
            </geometry>
          </collision>
          <visual name='visual_01'>
            <geometry>
              <mesh>
                <uri>model://helipad/meshes/helipad.dae</uri>
                <scale>1 1 1</scale>
              </mesh>
            </geometry>
          </visual>
        </link>
      </model>
     
      <!-- <plugin name="push_animate" filename="libanimated_ship.so"/> -->

    </model>

    <!-- <model name="frisbee">
      <pose>2 2 0 0 0 0</pose>
      <static>true</static>
      <link name="body">
       <visual name="visual">
          <pose>0 0 0 0 0 0</pose>
          <geometry>
            <mesh>
              <uri>model://frisbee/frisbee.dae</uri>
            </mesh>
          </geometry>
        </visual>
      </link>
    </model> -->


    <!-- <model name="swimmer">
      <pose>2 2 -1.2 0 0 0</pose>
      <static>true</static>
      <link name="body">
       <visual name="visual">
          <pose>0 0 0 0 0 0</pose>
          <geometry>
            <mesh>
              <uri>model://swimmer/model.dae</uri>
            </mesh>
          </geometry>
        </visual>
      </link>
    </model> -->

    <!-- <model name="life_buoy">
      <pose>2 2 -0.05 0 0 0</pose>
      <static>true</static>
      <link name="body">
       <visual name="visual">
          <pose>0 0 0 0 0 0</pose>
          <geometry>
            <mesh>
              <uri>model://life_buoy/model.dae</uri>
            </mesh>
          </geometry>
        </visual>
      </link>
    </model> -->

    

    <!-- <plugin name="sc_interface" filename="libuuv_sc_ros_interface_plugin.so"/> -->

    <!-- <gui fullscreen='0'>
      <camera name='user_camera'>
        <pose frame=''>34.6042 32.2383 -20.6633 0 0.528384 1.41245</pose>
        <view_controller>orbit</view_controller>
        <projection_type>perspective</projection_type>
      </camera>
    </gui> -->
  </world>
</sdf>
